plugins {
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.21'
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
    id "org.liquibase.gradle" version "2.0.1"
    id "com.google.protobuf" version "0.8.8"
}

apply plugin: 'io.spring.dependency-management'

group = 'ink.bonismo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    // https://stackoverflow.com/questions/40037487/the-filename-or-extension-is-too-long-error-using-gradle
    task classpathJar(type: Jar) {
        dependsOn configurations.runtime
        appendix = 'classpath'

        doFirst {
            manifest {
                attributes 'Class-Path': configurations.runtime.files.collect {
                    it.toURI().toURL().toString().replaceFirst(/file:\/+/, '/').replaceAll(' ', '%20')
                }.join(' ')
            }
        }
    }

    bootRun {
        dependsOn classpathJar
        doFirst {
            classpath = files("$buildDir/classes/java/main", "$buildDir/resources/main", classpathJar.archivePath)
        }
    }
}
//buildscript {
//    repositories {
//        mavenLocal()
//        mavenCentral()
//        maven { url "http://repo.spring.io/plugins-release" }
//        maven { url "https://plugins.gradle.org/m2/" }
//    }
//    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE"
//        classpath "io.spring.gradle:propdeps-plugin:0.0.10.RELEASE"
//        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.5.2"
//        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
//    }
//}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.4.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        proto {
            // In addition to the default 'src/main/proto'
            srcDir 'src/main/protobuf'
            srcDir 'src/main/protocolbuffers'
            // In addition to the default '**/*.proto' (use with caution).
            // Using an extension other than 'proto' is NOT recommended,
            // because when proto files are published along with class files, we can
            // only tell the type of a file from its extension.
            include '**/*.protodevel'
        }
        java {

        }
    }
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/protocolbuffers'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // kotlin
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-data"
    implementation "org.springframework.security:spring-security-web"
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.liquibase:liquibase-core'

    implementation "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
    implementation "org.projectlombok:lombok:${lombok_version}"
    implementation "org.apache.commons:commons-lang3"


    // hibernate
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.hibernate:hibernate-core'
    implementation 'org.hibernate:hibernate-entitymanager'
    implementation 'org.hibernate:hibernate-envers'
    implementation "org.hibernate:hibernate-jcache"
    implementation "org.hibernate.validator:hibernate-validator"
    
    // proto
    implementation 'net.devh:grpc-server-spring-boot-starter:2.0.1.RELEASE'
    implementation "io.protostuff:protostuff-core:${protostuff_version}"
    implementation "io.protostuff:protostuff-runtime:${protostuff_version}"
//    implementation "com.github.BAData:protobuf-converter:${protobuf_converter_version}"

    compileOnly "io.grpc:grpc-netty:${grpc_version}"
    compileOnly "io.grpc:grpc-protobuf:${grpc_version}"
    compileOnly "io.grpc:grpc-core:${grpc_version}"
    compileOnly "io.grpc:grpc-stub:${grpc_version}"

    
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
